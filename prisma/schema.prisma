// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  AYAH
  IBU
  ANAK
}

enum TransactionType {
  INCOME
  EXPENSE
}

model User {
  id               Int      @id @default(autoincrement())
  username         String   @unique
  email            String   @unique
  password         String
  isVerified       Boolean  @default(false)
  verificationCode String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  member           Member?
  memberId         Int?

  @@map("user")
}

model Member {
  id                  Int      @id @default(autoincrement())
  user                User     @relation(fields: [userId], references: [id])
  userId              Int      @unique
  family              Family   @relation(fields: [familyId], references: [id])
  familyId            Int
  role                Role     @default(ANAK)
  isFamilyHead        Boolean  @default(false)
  canAddIncome        Boolean  @default(false)
  canViewFamilyReport Boolean  @default(false)
  balance             Float    @default(0)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  Transaction Transaction[]

  @@map("memmber")
}

model Family {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  familyCode   String   @unique
  // @default(cuid())
  familyHeadId Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  members      Member[]

  Transaction Transaction[]

  @@map("family")
}

model Transaction {
  id              Int             @id @default(autoincrement())
  family          Family          @relation(fields: [familyId], references: [id])
  familyId        Int
  member          Member          @relation(fields: [memberId], references: [id])
  memberId        Int
  amount          Float
  transactionType TransactionType @default(EXPENSE)
  description     String
  category        String
  imageUrl        String?
  transactionAt   DateTime
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  @@map("transaction")
}
